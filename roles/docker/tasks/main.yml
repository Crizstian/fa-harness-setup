---
- block :
  - name: Create docker group
    group:
      name: docker
      gid: 5000
      state: present

  - name: Create docker user
    user:
      name: docker
      uid: 5000
      groups: docker
      state: present

  - name: Ensure docker directory
    file:
      path: /etc/docker
      state: directory
      mode: '0755'

  - name: Remove docker packages
    package:
      name: '{{ item }}'
      state: absent
    with_items:
      - docker
      - docker-client
      - docker-client-latest
      - docker-common
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate
      - docker-engine
      - docker-ce
      - docker-ce-cli
      - containerd.io
    when: 
      - ansible_distribution == "OracleLinux"

  - name: Remove docker repository
    yum_repository:
      name: docker-ce
      state: absent
    when: 
      - ansible_distribution == "OracleLinux"

  - name: Install docker repository
    yum_repository:
      name: '{{ item.name }}'
      description: '{{ item.desc }}'
      file: docker-ce
      baseurl: '{{ item.baseurl }}'
      enabled: '1'
      gpgcheck: yes
      gpgkey: 'https://download.docker.com/linux/centos/gpg'
      state: present
    with_items:
      - { name: 'docker-ce-stable', desc: 'Docker CE Stable - $basearch', baseurl: 'https://download.docker.com/linux/centos/7/$basearch/stable'}
      - { name: 'docker-ce-edge', desc: 'Docker CE Edge - $basearch', baseurl: 'https://download.docker.com/linux/centos/7/$basearch/edge'}
      - { name: 'docker-ce-test', desc: 'Docker CE Test - $basearch', baseurl: 'https://download.docker.com/linux/centos/7/$basearch/test'}
    when: 
      - ansible_distribution == "OracleLinux"

  - name: Install docker
    package:
      name: '{{ item }}'
      state: latest
    with_items:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    when: 
      - ansible_distribution == "OracleLinux"

  - name: Start docker service
    service:
      name: docker
      state: started
      enabled: yes

  - name: Test Docker with hello world example
    shell: 'docker run hello-world'
    register: hello_world_output

  - name: Show output of hello word example
    debug:
      msg: 'Container output: {{ hello_world_output.stdout }}'